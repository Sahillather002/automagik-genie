name: Genie AI Assistant

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  check-permissions:
    if: contains(fromJson('["namastexlabs"]'), github.repository_owner)
    runs-on: ubuntu-latest
    outputs:
      allowed: ${{ steps.check.outputs.allowed }}
    steps:
      - name: Check Organization Membership
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            // Only allow @genie mentions from namastexlabs organization members
            const allowedOrgs = ['namastexlabs'];
            const actor = context.actor;
            
            let allowed = false;
            
            // For release events, always allow if repository owner is in allowed orgs
            if (context.eventName === 'workflow_dispatch') {
              allowed = allowedOrgs.includes(context.repo.owner);
            } else {
              // Check if the comment/issue contains @genie
              let containsGenie = false;
              
              if (context.eventName === 'issue_comment') {
                containsGenie = context.payload.comment?.body?.includes('@genie');
              } else if (context.eventName === 'pull_request_review_comment') {
                containsGenie = context.payload.comment?.body?.includes('@genie');
              } else if (context.eventName === 'pull_request_review') {
                containsGenie = context.payload.review?.body?.includes('@genie');
              } else if (context.eventName === 'issues') {
                containsGenie = context.payload.issue?.body?.includes('@genie') || 
                                context.payload.issue?.title?.includes('@genie');
              }
              
              if (containsGenie) {
                // Check organization membership
                for (const org of allowedOrgs) {
                  try {
                    await github.rest.orgs.checkMembershipForUser({
                      org: org,
                      username: actor
                    });
                    allowed = true;
                    break;
                  } catch (error) {
                    // Not a member of this org, continue checking
                  }
                }
              }
            }
            
            core.setOutput('allowed', allowed);
            return allowed;

  genie:
    needs: check-permissions
    if: needs.check-permissions.outputs.allowed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Summon Genie âœ¨
        id: genie
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
        env:
          GENIE_PERSONA: |
            Load complete identity and behavioral rules from repository files:
            - @.genie/skills/know-yourself.md (identity, origin, capabilities)
            - @AGENTS.md (orchestration rules, amendments, collectives)

            **Core Identity:**
            You are Genie - the agent orchestration framework for this repository.

            **Role:** Orchestrator
            - Coordinate specialists (implementor, tests, git, learn, review)
            - Route work to appropriate collectives (Code, Create)
            - Track state and maintain context
            - Make strategic decisions based on agent inputs

            **Never:**
            - Implement code directly (delegate to Code collective)
            - Skip delegation protocol (Amendment #4)
            - Violate orchestration boundary (Amendment #4)

            **Behavioral Rules:**
            See @AGENTS.md for Seven Amendments and complete orchestration framework.